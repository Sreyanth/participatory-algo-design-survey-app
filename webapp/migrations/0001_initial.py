# Generated by Django 3.1.7 on 2021-03-05 15:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MechTaskAlgorithm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MechTaskStudentSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('index_in_dataframe', models.IntegerField(blank=True, null=True)),
                ('male', models.BooleanField()),
                ('race_eth', models.CharField(max_length=255)),
                ('pre_school', models.BooleanField()),
                ('expect_bachelors', models.BooleanField()),
                ('mother_hs', models.BooleanField()),
                ('mother_bachelors', models.BooleanField()),
                ('mother_work', models.BooleanField()),
                ('father_hs', models.BooleanField()),
                ('father_bachelors', models.BooleanField()),
                ('father_work', models.BooleanField()),
                ('self_born_us', models.BooleanField()),
                ('mother_born_us', models.BooleanField()),
                ('father_born_us', models.BooleanField()),
                ('english_at_home', models.BooleanField()),
                ('computer_for_schoolwork', models.BooleanField()),
                ('read_30_mins_a_day', models.BooleanField()),
                ('minutes_per_week_english', models.FloatField()),
                ('students_in_english', models.IntegerField()),
                ('school_has_library', models.BooleanField()),
                ('public_school', models.BooleanField()),
                ('urban', models.BooleanField()),
                ('school_size', models.IntegerField()),
                ('real_score', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MechTaskUserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=255)),
                ('has_deception', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MechTaskSurveyResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('previously_known_user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user_is_18_or_older', models.BooleanField(blank=True, null=True)),
                ('user_read_and_understood_info', models.BooleanField(blank=True, null=True)),
                ('user_wants_to_participate', models.BooleanField(blank=True, null=True)),
                ('user_consented_to_survey', models.BooleanField(blank=True, null=True)),
                ('mturk_id_attempt_1', models.CharField(blank=True, max_length=255, null=True)),
                ('mturk_id_attempt_2', models.CharField(blank=True, max_length=255, null=True)),
                ('final_mturk_id', models.CharField(blank=True, max_length=255, null=True)),
                ('current_stage', models.CharField(default='consent', max_length=255)),
                ('read_first_instruction', models.BooleanField(blank=True, null=True)),
                ('read_percentile_description', models.BooleanField(blank=True, null=True)),
                ('read_sample_data_points', models.BooleanField(blank=True, null=True)),
                ('read_model_description', models.BooleanField(blank=True, null=True)),
                ('read_that_model_is_off', models.BooleanField(blank=True, null=True)),
                ('passed_first_attention_check', models.BooleanField(blank=True, null=True)),
                ('passed_second_attention_check', models.BooleanField(blank=True, null=True)),
                ('chose_bonus_baseline', models.BooleanField(blank=True, null=True)),
                ('number_of_estimates_done', models.IntegerField(default=0)),
                ('model_estimates_for_bonus_calc', models.BooleanField(blank=True, null=True)),
                ('selected_attributes', models.CharField(blank=True, max_length=500, null=True)),
                ('model_estimate_average_error', models.FloatField(blank=True, null=True)),
                ('self_estimate_average_error', models.FloatField(blank=True, null=True)),
                ('model_estimate_confidence', models.CharField(blank=True, max_length=255, null=True)),
                ('self_estimate_confidence', models.CharField(blank=True, max_length=255, null=True)),
                ('why_chose_the_attributes', models.TextField(blank=True, null=True)),
                ('why_chose_the_algorithm', models.TextField(blank=True, null=True)),
                ('why_chose_model_estimate', models.TextField(blank=True, null=True)),
                ('why_chose_self_estimate', models.TextField(blank=True, null=True)),
                ('representativeness', models.CharField(blank=True, max_length=255, null=True)),
                ('transparency', models.CharField(blank=True, max_length=255, null=True)),
                ('fairness_tutoring_resources', models.CharField(blank=True, max_length=255, null=True)),
                ('fairness_scholarship', models.CharField(blank=True, max_length=255, null=True)),
                ('fairness_absent_students', models.CharField(blank=True, max_length=255, null=True)),
                ('fairness_explanation', models.TextField(blank=True, null=True)),
                ('likeliness_to_use_model', models.CharField(blank=True, max_length=255, null=True)),
                ('any_other_thoughts', models.TextField(blank=True, null=True)),
                ('age_bracket', models.CharField(blank=True, max_length=255, null=True)),
                ('pronoun', models.CharField(blank=True, max_length=255, null=True)),
                ('race_ethnicity', models.CharField(blank=True, max_length=255, null=True)),
                ('highest_level_of_education', models.CharField(blank=True, max_length=255, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('algorithm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.mechtaskalgorithm')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mech_task_survey_response', to=settings.AUTH_USER_MODEL)),
                ('user_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.mechtaskusergroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MechTaskSurveyEstimate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('model_estimate', models.FloatField(blank=True, null=True)),
                ('user_estimate', models.FloatField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.mechtaskstudentsample')),
                ('survey_response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_estimates', to='webapp.mechtasksurveyresponse')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
